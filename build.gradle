buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE'
        classpath 'org.owasp:dependency-check-gradle:4.0.2'
        classpath 'de.dynamicfiles.projects.gradle.plugins:javafx-gradle-plugin:8.8.2'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'jacoco'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.owasp.dependencycheck'
apply plugin: 'javafx-gradle-plugin'

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
    }
}

dependencyCheck {
    analyzers {
        assemblyEnabled = false
    }

    failBuildOnCVSS = 5
    failOnError = true
}

sourceCompatibility = 1.8

group 'uk.co.mpcontracting'
version = '4.1.2'

jar {
    archivesBaseName = "${project.name}"
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter'
    compile 'de.roskenet:springboot-javafx-support:2.1.6'
    compile 'javax.validation:validation-api'
    compile 'org.hibernate.validator:hibernate-validator'
    compile 'org.apache.lucene:lucene-core:6.1.0'
    compile 'org.apache.lucene:lucene-queries:6.1.0'
    compile 'org.apache.lucene:lucene-analyzers-common:6.1.0'
    compile 'org.apache.commons:commons-lang3'
    compile 'com.google.code.gson:gson'
    compile 'com.igormaznitsa:commons-version:1.0.0'
    compile 'org.eclipse.jetty:jetty-servlet'
    compile 'net.java.dev.jna:jna'

    compileOnly 'org.projectlombok:lombok'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'de.roskenet:springboot-javafx-test:1.3.0'
    testCompile 'org.assertj:assertj-core'
    testCompile 'commons-io:commons-io:2.6'
    testCompile 'com.google.guava:guava:27.1-jre'

    testCompileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testAnnotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

jacoco {
    toolVersion = '0.8.3'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'INSTRUCTION'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
            excludes = [
                    // Exclude RpmJukebox as we cannot test the static initialisation fully
                    'uk.co.mpcontracting.rpmjukebox.RpmJukebox',
                    // Exclude MediaManager as we cannot test the MediaPlayer events
                    'uk.co.mpcontracting.rpmjukebox.manager.MediaManager',
                    // Exclude NativeManager as test coverage is only achievable on OSX
                    'uk.co.mpcontracting.rpmjukebox.manager.NativeManager'
            ]
        }
    }
}

/////////////////////////
// JavaFX Build Script //
/////////////////////////

jfx {
    appName = 'RPM Jukebox'
    vendor = 'Matt Parker'
    nativeReleaseVersion = "${version}"
    mainClass = 'uk.co.mpcontracting.rpmjukebox.RpmJukebox'
    jfxMainAppJarName = "${project.name}-${version}.jar"
    jvmArgs = ['-Xmx128m']
    //verbose = true
    bundleArguments = [
            'copyright': 'Â©2016-2020 Matt Parker',
            'systemWide': 'true',
            'win.menuGroup': 'RPM Jukebox',
            'win.msi.productVersion': "${version}"
    ]
}